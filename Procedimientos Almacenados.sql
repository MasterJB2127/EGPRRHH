CREATE SEQUENCE SQ_BITACORA
START WITH 1
  INCREMENT BY 1;

/*PROCEDIMIENTO ALMACENADO PARA REGISTRO DE USUARIOS*/
ALTER PROC SP_INGRESO_USUARIO
@DPI AS VARCHAR(15), @NOMBRES AS VARCHAR(50), @APELLIDOS AS VARCHAR(50), @APELLIDO_C AS VARCHAR(25), @FECHA_INICIO AS DATE,
@ID_JEFE AS VARCHAR(15), @CORREO AS VARCHAR(200), @ID_ROL AS INT, @ID_DEPTO AS INT
AS
DECLARE
@ErrorMessage varchar(4000),
@ErrorSeverity INT,
@ErrorState INT,
@MENSAJE VARCHAR(100),
@JSON VARCHAR(500),
@DIFF INT
BEGIN TRAN
BEGIN TRY
IF NOT EXISTS (SELECT DPI from COLABORADO where DPI = @DPI)
BEGIN
IF NOT EXISTS (SELECT Correo FROM COLABORADO WHERE Correo = @CORREO)
BEGIN
INSERT INTO COLABORADO VALUES (@DPI, @NOMBRES, @APELLIDOS, @APELLIDO_C, @FECHA_INICIO, @ID_JEFE, ENCRYPTBYPASSPHRASE('password', '123456789'), @CORREO, @ID_ROL, @ID_DEPTO)
SELECT @DIFF = DATEDIFF (YEAR, @FECHA_INICIO ,  CONVERT(VARCHAR(10), GETDATE(), 103))
INSERT INTO VACACIONES VALUES (@DPI, 0, @DIFF)
INSERT INTO PERMISO_ESPECIAL VALUES(@DPI, 5, @DIFF)
COMMIT TRAN
IF NOT EXISTS (SELECT Anios FROM VACACIONES WHERE Anios = @DIFF)
BEGIN
UPDATE VACACIONES SET Dias_P = Dias_P + (@DIFF * 15)/@DIFF
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"USUARIO REGISTRADO EXITOSAMENTE" }')
RAISERROR (@JSON, 11, 1)
END
END
ELSE
BEGIN
RAISERROR ('EL CORREO QUE DESEA INGRESAR YA EXISTE EN EL SISTEMA', 11, 2)
END
END
ELSE
BEGIN
RAISERROR ('EL USUARIO QUE INTENTA REGISTRAR YA EXISTE EN EL SISTEMA', 11, 2)
END
END TRY
BEGIN CATCH
ROLLBACK TRAN
SELECT @ErrorMessage = ERROR_MESSAGE(),
@ErrorSeverity = ERROR_SEVERITY(),
@ErrorState = ERROR_STATE();
RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
END CATCH

exec SP_INGRESO_USUARIO '123456', 'Byron Gael', 'Chinchilla Aguilar', '', '01/09/2021', '0', 'bonillajosuei@outlook.com', 3, 2107

/*PROCEDIMIENTO ALMACENADO PARA LOGIN*/
/*PENDIENTE EL CALCULO DE TIEMPOR LABORADO PARA CALCULAR VACACIONES Y PERMISOS ESPECIALES*/
alter PROC SP_LOGIN
@CORREO AS VARCHAR(60), @CONTRASENIA AS VARCHAR(50)
AS
DECLARE
@ErrorMessage varchar(4000),
@ErrorSeverity INT,
@ErrorState INT,
@MENSAJE VARCHAR(100),
@ROL VARCHAR(100),
@DPI VARCHAR(15),
@JSON VARCHAR(500),
@NOMBRE VARCHAR(100),
@DIFF INT,
@FECHA_INICIO date
BEGIN TRAN
BEGIN TRY
IF EXISTS (SELECT Correo FROM COLABORADO WHERE Correo = @CORREO and CONVERT(VARCHAR(MAX), DECRYPTBYPASSPHRASE('password', contrasenia)) = @CONTRASENIA)
BEGIN
select @ROL = r.rol from ROLES r
inner join COLABORADO u
on r.Id_Rol = u.Id_Rol
where u.Correo=@CORREO and CONVERT(VARCHAR(MAX), DECRYPTBYPASSPHRASE('password', contrasenia)) = @CONTRASENIA;
select @DPI = u.DPI from COLABORADO u
where u.Correo=@CORREO and CONVERT(VARCHAR(MAX), DECRYPTBYPASSPHRASE('password', contrasenia)) = @CONTRASENIA;
select @NOMBRE = u.Nombres + ' ' + u.Apellidos from COLABORADO u
where u.Correo=@CORREO and CONVERT(VARCHAR(MAX), DECRYPTBYPASSPHRASE('password', contrasenia)) = @CONTRASENIA;
SELECT @FECHA_INICIO = Fecha_Inicio from COLABORADO where DPI = @DPI
SELECT @DIFF = DATEDIFF (YEAR, @FECHA_INICIO, CONVERT(VARCHAR(10), GETDATE(), 103))
IF NOT EXISTS (SELECT Anios FROM VACACIONES WHERE Anios = @DIFF)
BEGIN
UPDATE VACACIONES SET Dias_P = Dias_P + (@DIFF * 15)/@DIFF
UPDATE VACACIONES SET Anios = @DIFF
COMMIT TRAN
END
select @JSON = CONCAT('{"rol": "', @ROL, '",', ' "dpi": "', @DPI, '", "nombre": "',@NOMBRE, '", message":"BIENVENIDO AL SISTEMA" }')
RAISERROR (@JSON, 11, 1)
END
ELSE
BEGIN
select @JSON = CONCAT('{"rol": "0",', ' "dpi": "0", "message":"USUARIO O CONTRASEÑA INCORRECTOS" }')
RAISERROR (@JSON, 11, 2)
END
END TRY
BEGIN CATCH
ROLLBACK TRAN
SELECT @ErrorMessage = ERROR_MESSAGE(),
@ErrorSeverity = ERROR_SEVERITY(),
@ErrorState = ERROR_STATE();
RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
END CATCH

exec SP_LOGIN 'bonillamjosuei@outlook.com', '123456789'

SELECT CONVERT(VARCHAR(10), GETDATE(), 103)

select DATEDIFF (YEAR, CONVERT(VARCHAR(10), GETDATE(), 103), '2022-09-01')

CREATE SEQUENCE SQ_EXPEDIENTES
START WITH 1
  INCREMENT BY 1;

  CREATE SEQUENCE SQ_SOLICITUD
START WITH 1
  INCREMENT BY 1;

drop sequence sq_expedientes

/*PROCEDIMIENTO ALMACENADO PARA INGRESO DE EXPEDIENTE*/
CREATE PROC SP_INGRESO_EXPEDIENTE
@PAPELERIA AS VARBINARY(8000), @DPI AS VARCHAR(15)
AS 
DECLARE
@ErrorMessage varchar(4000),
@ErrorSeverity INT,
@ErrorState INT,
@MENSAJE VARCHAR(100),
@JSON VARCHAR(500)
BEGIN TRAN
BEGIN TRY
IF NOT EXISTS (SELECT DPI FROM EXPEDIENTE WHERE DPI = @DPI)
BEGIN
INSERT INTO EXPEDIENTE VALUES (CONCAT(@DPI, '-', NEXT VALUE FOR SQ_EXPEDIENTES), @PAPELERIA, @DPI);
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"INFORMACIÓN GUARDADA CORRECTAMENTE" }')
RAISERROR (@JSON, 11, 1)
END
ELSE
BEGIN
UPDATE EXPEDIENTE SET Papeleria = @PAPELERIA WHERE DPI = @DPI
END
END TRY
BEGIN CATCH
ROLLBACK TRAN
SELECT @ErrorMessage = ERROR_MESSAGE(),
@ErrorSeverity = ERROR_SEVERITY(),
@ErrorState = ERROR_STATE();
RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
END CATCH

/*PROCEDIMIENTO ALMACENADO PARA INGRESO DE SOLICITUDES*/
ALTER PROC SP_SOLICITUD
@FECHA_INICIAL AS DATE, @FECHA_FINAL AS DATE, @DPI AS VARCHAR(15), @ID_PERMISO AS INT, @OBSERVACIONES AS VARCHAR(1000)
AS
DECLARE
@ErrorMessage varchar(4000),
@ErrorSeverity INT,
@ErrorState INT,
@MENSAJE VARCHAR(100),
@JSON VARCHAR(500),
@DIFF INT,
@FECHA_INICIO date,
@ROL INT,
@DIASP INT,
@DIASS INT,
@ESTADO INT,
@DPPE INT
BEGIN TRAN
BEGIN TRY
SELECT @DPPE = Dias_P from PERMISO_ESPECIAL Where DPI= @DPI
SELECT @DIASS = dbo.DifDias(CONVERT(DATE, @FECHA_INICIAL, 103), CONVERT (date, @FECHA_FINAL, 103))
SELECT @DIASP = Dias_P from VACACIONES WHERE DPI = @DPI
SELECT @ROL = id_rol from COLABORADO WHERE DPI = @DPI
select @FECHA_INICIO = Fecha_Inicio from COLABORADO WHERE DPI = @DPI
select @DIFF = DATEDIFF (YEAR, @FECHA_INICIO, CONVERT(VARCHAR(10), GETDATE(), 103))
SELECT @ESTADO = Estado from SOLICITUDES where DPI = @DPI
IF NOT EXISTS(SELECT DPI FROM SOLICITUDES WHERE DPI = @DPI AND ESTADO = 3)
BEGIN
IF (@ID_PERMISO = 1)
BEGIN
IF (@DIASS <= @DIASP)
BEGIN
IF (@ROL = 4)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,0,0, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES) 
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO A SU JEFE INMEDIATO" }')
RAISERROR (@JSON, 11, 1)
END
IF (@ROL = 3)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,1,0, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES) 
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO AL GERENTE" }')
RAISERROR (@JSON, 11, 1)
END
IF (@ROL = 2)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,1,1, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES) 
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO A RECURSOS HUMANOS" }')
RAISERROR (@JSON, 11, 1)
END
END
ELSE
BEGIN
RAISERROR ('LOS DIAS QUE ESTÁ SOLICITANDO SOBREPASAN LOS PERMITIDOS POR ESTA EMPRESA, POR FAVOR REVISE LA INFORMACIÓN', 11, 2)
END
END
IF (@ID_PERMISO = 2)
BEGIN
IF (@DIASS <= 3)
BEGIN
IF (@ROL = 4)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,0,0, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES) 
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO A SU JEFE INMEDIATO" }')
RAISERROR (@JSON, 11, 1)
END
IF (@ROL = 3)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,1,0, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES) 
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO AL GERENTE" }')
RAISERROR (@JSON, 11, 1)
END
IF (@ROL = 2)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,1,1, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES) 
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO A RECURSOS HUMANOS" }')
RAISERROR (@JSON, 11, 1)
END
END
ELSE
BEGIN
RAISERROR ('LOS DIAS QUE ESTÁ SOLICITANDO SOBREPASAN LOS PERMITIDOS POR ESTA EMPRESA, POR FAVOR REVISE LA INFORMACIÓN', 11, 2)
END
END
IF (@ID_PERMISO = 3)
BEGIN
IF (@DIASS <= 2)
BEGIN
IF (@ROL = 4)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,0,0, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES) 
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO A SU JEFE INMEDIATO" }')
RAISERROR (@JSON, 11, 1)
END
IF (@ROL = 3)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,1,0, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES) 
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO AL GERENTE" }')
RAISERROR (@JSON, 11, 1)
END
IF (@ROL = 2)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,1,1, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES) 
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO A RECURSOS HUMANOS" }')
RAISERROR (@JSON, 11, 1)
END
END
ELSE
BEGIN
RAISERROR ('LOS DIAS QUE ESTÁ SOLICITANDO SOBREPASAN LOS PERMITIDOS POR ESTA EMPRESA, POR FAVOR REVISE LA INFORMACIÓN', 11, 2)
END
END
IF (@ID_PERMISO = 4)
BEGIN
IF (@DIASS <= 1)
BEGIN
IF (@ROL = 4)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,0,0, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES) 
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO A SU JEFE INMEDIATO" }')
RAISERROR (@JSON, 11, 1)
END
IF (@ROL = 3)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,1,0, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES) 
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO AL GERENTE" }')
RAISERROR (@JSON, 11, 1)
END
IF (@ROL = 2)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,1,1, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES) 
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO A RECURSOS HUMANOS" }')
RAISERROR (@JSON, 11, 1)
END
END
ELSE
BEGIN
RAISERROR ('LOS DIAS QUE ESTÁ SOLICITANDO SOBREPASAN LOS PERMITIDOS POR ESTA EMPRESA, POR FAVOR REVISE LA INFORMACIÓN', 11, 2)
END
END
IF (@ID_PERMISO = 5)
BEGIN
IF (@DIASS <= 5)
BEGIN
IF (@ROL = 4)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,0,0, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES) 
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO A SU JEFE INMEDIATO" }')
RAISERROR (@JSON, 11, 1)
END
IF (@ROL = 3)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,1,0, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES) 
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO AL GERENTE" }')
RAISERROR (@JSON, 11, 1)
END
IF (@ROL = 2)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,1,1, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES) 
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO A RECURSOS HUMANOS" }')
RAISERROR (@JSON, 11, 1)
END
END
ELSE
BEGIN
RAISERROR ('LOS DIAS QUE ESTÁ SOLICITANDO SOBREPASAN LOS PERMITIDOS POR ESTA EMPRESA, POR FAVOR REVISE LA INFORMACIÓN', 11, 2)
END
END
IF (@ID_PERMISO = 6)
BEGIN
IF (@DIASS <= @DPPE)
BEGIN
IF (@ROL = 4)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,0,0, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES)
UPDATE PERMISO_ESPECIAL SET Dias_P = Dias_P - @DIASS WHERE DPI = @DPI
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO A SU JEFE INMEDIATO" }')
RAISERROR (@JSON, 11, 1)
END
IF (@ROL = 3)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,1,0, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES) 
UPDATE PERMISO_ESPECIAL SET Dias_P = Dias_P - @DIASS WHERE DPI = @DPI
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO AL GERENTE" }')
RAISERROR (@JSON, 11, 1)
END
IF (@ROL = 2)
BEGIN
INSERT INTO SOLICITUDES VALUES(NEXT VALUE FOR SQ_SOLICITUD, 1,1,1, CONVERT(VARCHAR(10), GETDATE(), 103), @FECHA_INICIAL, @FECHA_FINAL, @DPI, @ID_PERMISO, 3, @OBSERVACIONES) 
UPDATE PERMISO_ESPECIAL SET Dias_P = Dias_P - @DIASS WHERE DPI = @DPI
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SU SOLICITUD SE HA TRANSFERIDO A RECURSOS HUMANOS" }')
RAISERROR (@JSON, 11, 1)
END
END
ELSE
BEGIN
RAISERROR ('LOS DIAS QUE ESTÁ SOLICITANDO SOBREPASAN LOS PERMITIDOS POR ESTA EMPRESA, POR FAVOR REVISE LA INFORMACIÓN', 11, 2)
END
END
END
ELSE
BEGIN
RAISERROR ('TIENE UNA SOLICITUD PENDIENTE DE APROBACION', 11, 2)
END
END TRY
BEGIN CATCH
ROLLBACK TRAN
SELECT @ErrorMessage = ERROR_MESSAGE(),
@ErrorSeverity = ERROR_SEVERITY(),
@ErrorState = ERROR_STATE();
RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
END CATCH

EXEC SP_SOLICITUD '27-09-2021', '28-09-2021', '123456', 6, ''

/*PROCEDIMIENTO ALMACENADO PARA APROBACIÓN DE SOLICITUD, JEFE INMEDIATO*/
ALTER PROC SP_AP_JI
@DPIJ AS VARCHAR(15), @DPIC AS VARCHAR(15)
AS
DECLARE
@ErrorMessage varchar(4000),
@ErrorSeverity INT,
@ErrorState INT,
@MENSAJE VARCHAR(100),
@JSON VARCHAR(500),
@ESTADO INT,
@TIPO_P VARCHAR(50),
@NOMBRE VARCHAR(100)
BEGIN TRAN
BEGIN TRY
SELECT @ESTADO = F_Jefe from SOLICITUDES where DPI = @DPIC
SELECT @NOMBRE = Nombres + ' ' + Apellidos from COLABORADO where DPI = @DPIC
SELECT @TIPO_P = p.Descripcion from PERMISOS p
INNER JOIN SOLICITUDES s
on s.Id_Permiso = p.Id_Permisos
where s.F_Jefe = 0
IF (@ESTADO = 0)
BEGIN
UPDATE SOLICITUDES SET F_Jefe = 1 WHERE DPI = @DPIC
INSERT INTO BITACORA VALUES(NEXT VALUE FOR SQ_BITACORA, CONCAT('FIRMA A SOLICITUD DE PERMISO: ', @TIPO_P, ' DEL COLABORADOR: ', @NOMBRE), @DPIJ)
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SOLICITUD TRANSFERIDA AL GERENTE" }')
RAISERROR (@JSON, 11, 1)
END
ELSE
BEGIN
RAISERROR ('ESTE COLABORADOR NO TIENE SOLICITUDES PENDIENTES DE SU APROBACION', 11, 2)
END
END TRY
BEGIN CATCH
ROLLBACK TRAN
SELECT @ErrorMessage = ERROR_MESSAGE(),
@ErrorSeverity = ERROR_SEVERITY(),
@ErrorState = ERROR_STATE();
RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
END CATCH

/*PROCEDIMIENTO ALMACENADO PARA APROBACIÓN DE SOLICITUD, GERENTE*/
ALTER PROC SP_AP_GERENTE
@DPIJ AS VARCHAR(15), @DPIC AS VARCHAR(15)
AS
DECLARE
@ErrorMessage varchar(4000),
@ErrorSeverity INT,
@ErrorState INT,
@MENSAJE VARCHAR(100),
@JSON VARCHAR(500),
@ESTADO INT,
@TIPO_P VARCHAR(50),
@NOMBRE VARCHAR(100)
BEGIN TRAN
BEGIN TRY
SELECT @ESTADO = F_Gerente from SOLICITUDES where DPI = @DPIC
SELECT @NOMBRE = Nombres + ' ' + Apellidos from COLABORADO where DPI = @DPIC
SELECT @TIPO_P = p.Descripcion from PERMISOS p
INNER JOIN SOLICITUDES s
on s.Id_Permiso = p.Id_Permisos
where s.F_Gerente = 0
IF (@ESTADO = 0)
BEGIN
UPDATE SOLICITUDES SET F_Gerente = 1 WHERE DPI = @DPIC AND Estado = 3
INSERT INTO BITACORA VALUES(NEXT VALUE FOR SQ_BITACORA, CONCAT('FIRMA A SOLICITUD DE PERMISO: ', @TIPO_P, ' DEL COLABORADOR: ', @NOMBRE), @DPIJ)
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SOLICITUD TRANSFERIDA A RRHH" }')
RAISERROR (@JSON, 11, 1)
END
ELSE
BEGIN
RAISERROR ('ESTE COLABORADOR NO TIENE SOLICITUDES PENDIENTES DE SU APROBACION', 11, 2)
END
END TRY
BEGIN CATCH
ROLLBACK TRAN
SELECT @ErrorMessage = ERROR_MESSAGE(),
@ErrorSeverity = ERROR_SEVERITY(),
@ErrorState = ERROR_STATE();
RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
END CATCH

/*PROCEDIMIENTO ALMACENADO PARA APROBACIÓN DE SOLICITUD, RRHH*/
ALTER PROC SP_AP_RRHH
@DPIJ AS VARCHAR(15), @DPIC AS VARCHAR(15)
AS
DECLARE
@ErrorMessage varchar(4000),
@ErrorSeverity INT,
@ErrorState INT,
@MENSAJE VARCHAR(100),
@JSON VARCHAR(500),
@ESTADO INT,
@TIPO_P VARCHAR(50),
@NOMBRE VARCHAR(100)
BEGIN TRAN
BEGIN TRY
SELECT @ESTADO = Estado from SOLICITUDES where DPI = @DPIC
SELECT @NOMBRE = Nombres + ' ' + Apellidos from COLABORADO where DPI = @DPIC
SELECT @TIPO_P = p.Descripcion from PERMISOS p
INNER JOIN SOLICITUDES s
on s.Id_Permiso = p.Id_Permisos
where s.F_Gerente = 0
IF (@ESTADO = 3)
BEGIN
UPDATE SOLICITUDES SET Estado = 1 WHERE DPI = @DPIC AND Estado = 3
INSERT INTO BITACORA VALUES(NEXT VALUE FOR SQ_BITACORA, CONCAT('APROBACION DE SOLICITUD DE PERMISO: ', @TIPO_P, ' DEL COLABORADOR: ', @NOMBRE), @DPIJ)
COMMIT TRAN
select @JSON = CONCAT('{"id": "1",','" message":"SOLICITUD APROBADA" }')
RAISERROR (@JSON, 11, 1)
END
ELSE
BEGIN
RAISERROR ('ESTE COLABORADOR NO TIENE SOLICITUDES PENDIENTES DE SU APROBACION', 11, 2)
END
END TRY
BEGIN CATCH
ROLLBACK TRAN
SELECT @ErrorMessage = ERROR_MESSAGE(),
@ErrorSeverity = ERROR_SEVERITY(),
@ErrorState = ERROR_STATE();
RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState)
END CATCH

EXEC SP_AP_RRHH '3393581062101', '123456'